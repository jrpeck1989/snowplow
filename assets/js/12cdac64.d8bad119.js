"use strict";(self.webpackChunkdocsite_poc_github_io=self.webpackChunkdocsite_poc_github_io||[]).push([[8318],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),h=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=h(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=h(n),d=a,m=u["".concat(l,".").concat(d)]||u[d]||p[d]||i;return n?r.createElement(m,o(o({ref:t},s),{},{components:n})):r.createElement(m,o({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var h=2;h<i;h++)o[h]=n[h];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},73567:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>h});var r=n(87462),a=(n(67294),n(3905));const i={title:"HTTP header extractor enrichment",date:"2020-02-14",sidebar_position:7},o=void 0,c={unversionedId:"enriching-your-data/available-enrichments/http-header-extractor-enrichment/index",id:"enriching-your-data/available-enrichments/http-header-extractor-enrichment/index",title:"HTTP header extractor enrichment",description:"This enrichment can extract name/value pairs from the HTTP headers and attach them to the event as derived contexts.",source:"@site/docs/enriching-your-data/available-enrichments/http-header-extractor-enrichment/index.md",sourceDirName:"enriching-your-data/available-enrichments/http-header-extractor-enrichment",slug:"/enriching-your-data/available-enrichments/http-header-extractor-enrichment/",permalink:"/docs/enriching-your-data/available-enrichments/http-header-extractor-enrichment/",draft:!1,editUrl:"https://github.com/snowplow/snowplow.github.io/tree/main/docs/enriching-your-data/available-enrichments/http-header-extractor-enrichment/index.md",tags:[],version:"current",lastUpdatedAt:1662725915,formattedLastUpdatedAt:"Sep 9, 2022",sidebarPosition:7,frontMatter:{title:"HTTP header extractor enrichment",date:"2020-02-14",sidebar_position:7},sidebar:"defaultSidebar",previous:{title:"Cookie extractor enrichment",permalink:"/docs/enriching-your-data/available-enrichments/cookie-extractor-enrichment/"},next:{title:"YAUAA enrichment",permalink:"/docs/enriching-your-data/available-enrichments/yauaa-enrichment/"}},l={},h=[{value:"Configuration",id:"configuration",level:2},{value:"Input",id:"input",level:2},{value:"Output",id:"output",level:2}],s={toc:h};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This enrichment can extract name/value pairs from the HTTP headers and attach them to the event as derived contexts."),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/snowplow/iglu-central/blob/master/schemas/com.snowplowanalytics.snowplow.enrichments/http_header_extractor_config/jsonschema/1-0-0"},"Schema")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/snowplow/enrich/blob/master/config/enrichments/http_header_extractor_config.json"},"Example"))),(0,a.kt)("p",null,"All the headers that will match the regex defined in ",(0,a.kt)("inlineCode",{parentName:"p"},"headersPattern")," parameter will be attached to the event."),(0,a.kt)("p",null,"In the example configuration, all the headers of the request would be attached to the event."),(0,a.kt)("p",null,"If we are only interested in the host for instance, we could have:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'      "headersPattern": "Host"\n')),(0,a.kt)("h2",{id:"input"},"Input"),(0,a.kt)("p",null,"This enrichment uses the HTTP headers."),(0,a.kt)("h2",{id:"output"},"Output"),(0,a.kt)("p",null,"For ",(0,a.kt)("strong",{parentName:"p"},"each")," header matching the regex defined in ",(0,a.kt)("inlineCode",{parentName:"p"},"headersPattern"),", a context with ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/snowplow/iglu-central/blob/master/schemas/org.ietf/http_header/jsonschema/1-0-0"},"this schema")," is added to the enriched event. Each context contains only one name/value pair."))}p.isMDXComponent=!0}}]);