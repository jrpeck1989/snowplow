"use strict";(self.webpackChunkdocsite_poc_github_io=self.webpackChunkdocsite_poc_github_io||[]).push([[73404],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>d});var i=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=i.createContext({}),c=function(e){var n=i.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=c(e.components);return i.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},f=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),f=c(t),d=o,m=f["".concat(p,".").concat(d)]||f[d]||u[d]||r;return t?i.createElement(m,s(s({ref:n},l),{},{components:t})):i.createElement(m,s({ref:n},l))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,s=new Array(r);s[0]=f;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var c=2;c<r;c++)s[c]=t[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,t)}f.displayName="MDXCreateElement"},2639:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=t(87462),o=(t(67294),t(3905));const r={title:"Sqs2kinesis",date:"2021-07-16",sidebar_position:40},s=void 0,a={unversionedId:"pipeline-components-and-applications/sqs2kinesis/index",id:"pipeline-components-and-applications/sqs2kinesis/index",title:"Sqs2kinesis",description:"Sqs2kinesis is an application for moving data from SQS to Kinesis on AWS. In a Snowplow pipeline, you can run it if you are using SQS as either a fallback buffer or as your primary collector sink.",source:"@site/docs/pipeline-components-and-applications/sqs2kinesis/index.md",sourceDirName:"pipeline-components-and-applications/sqs2kinesis",slug:"/pipeline-components-and-applications/sqs2kinesis/",permalink:"/docs/pipeline-components-and-applications/sqs2kinesis/",draft:!1,editUrl:"https://github.com/snowplow/snowplow.github.io/tree/main/docs/pipeline-components-and-applications/sqs2kinesis/index.md",tags:[],version:"current",lastUpdatedAt:1662725915,formattedLastUpdatedAt:"Sep 9, 2022",sidebarPosition:40,frontMatter:{title:"Sqs2kinesis",date:"2021-07-16",sidebar_position:40},sidebar:"defaultSidebar",previous:{title:"Configure the Stream Collector",permalink:"/docs/pipeline-components-and-applications/stream-collector/configure/"},next:{title:"sqs2kinesis configuration reference",permalink:"/docs/pipeline-components-and-applications/sqs2kinesis/sqs2kinesis-configuration-reference/"}},p={},c=[{value:"Getting a Docker image",id:"getting-a-docker-image",level:3},{value:"Configuration",id:"configuration",level:3}],l={toc:c};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,i.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Sqs2kinesis is an application for moving data from SQS to Kinesis on AWS. In a Snowplow pipeline, you can run it if you are using SQS as either a fallback buffer or as your primary collector sink."),(0,o.kt)("p",null,"The AWS setup guide describes ",(0,o.kt)("a",{parentName:"p",href:"/docs/pipeline-components-and-applications/stream-collector/configure/#setting-up-an-sqs-buffer-2-0-0"},"how to set up a SQS buffer for your collector, and why it is needed.")," If you chose not to configure an SQS buffer, then you do not need to run sqs2kinesis."),(0,o.kt)("h3",{id:"getting-a-docker-image"},"Getting a Docker image"),(0,o.kt)("p",null,"sqs2kinesis is published on\xa0",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/snowplow/sqs2kinesis/tags"},"Docker Hub"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker pull snowplow/sqs2kinesis:1.0.2\n")),(0,o.kt)("p",null,"It is configured by providing a hocon file on the command line:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker run --rm \\\n  -v $PWD/config.hocon:/sqs2kinesis/config.hocon \\\n  snowplow/sqs2kinesis:1.0.2 --config /sqs2kinesis/config.hocon\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"--config")," command option is actually optional. For some setups it is more convenient to provide configuration parameters using jvm system properties or environment variables, as documented in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lightbend/config/blob/v1.4.1/README.md"},"the Lightbend config readme"),"."),(0,o.kt)("h3",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"Here is an example of a minimal configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "input": {\n    "queue": "https://sqs.eu-central-1.amazonaws.com/000000000000/snowplow-buffer"\n  }\n  "output": {\n    # Configure output kinesis stream for valid messages\n    "good": {\n      "streamName": "snowplow-raw-payloads"\n    }\n\n    "bad": {\n      # Configure output kinesis stream for invalid sqs messages\n      "streamName": "snowplow-bad-events"\n    }\n  }\n}\n')),(0,o.kt)("p",null,"See\xa0",(0,o.kt)("a",{parentName:"p",href:"/docs/pipeline-components-and-applications/sqs2kinesis/sqs2kinesis-configuration-reference/"},"the configuration reference"),"\xa0for a complete description of all parameters."))}u.isMDXComponent=!0}}]);