"use strict";(self.webpackChunkdocsite_poc_github_io=self.webpackChunkdocsite_poc_github_io||[]).push([[51957],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(t),d=a,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||l;return t?o.createElement(h,r(r({ref:n},p),{},{components:t})):o.createElement(h,r({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,r=new Array(l);r[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,r[1]=i;for(var c=2;c<l;c++)r[c]=t[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},32790:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var o=t(87462),a=(t(67294),t(3905));const l={title:"Set up automated testing with Snowplow Micro",date:"2021-03-26",sidebar_position:1e3},r="Snowplow Micro",i={unversionedId:"managing-data-quality/testing-and-qa-workflows/set-up-automated-testing-with-snowplow-micro/index",id:"managing-data-quality/testing-and-qa-workflows/set-up-automated-testing-with-snowplow-micro/index",title:"Set up automated testing with Snowplow Micro",description:"Latest Docker image version",source:"@site/docs/managing-data-quality/testing-and-qa-workflows/set-up-automated-testing-with-snowplow-micro/index.md",sourceDirName:"managing-data-quality/testing-and-qa-workflows/set-up-automated-testing-with-snowplow-micro",slug:"/managing-data-quality/testing-and-qa-workflows/set-up-automated-testing-with-snowplow-micro/",permalink:"/docs/managing-data-quality/testing-and-qa-workflows/set-up-automated-testing-with-snowplow-micro/",draft:!1,editUrl:"https://github.com/snowplow/snowplow.github.io/tree/main/docs/managing-data-quality/testing-and-qa-workflows/set-up-automated-testing-with-snowplow-micro/index.md",tags:[],version:"current",lastUpdatedAt:1662725915,formattedLastUpdatedAt:"Sep 9, 2022",sidebarPosition:1e3,frontMatter:{title:"Set up automated testing with Snowplow Micro",date:"2021-03-26",sidebar_position:1e3},sidebar:"defaultSidebar",previous:{title:"Testing and QA workflows",permalink:"/docs/managing-data-quality/testing-and-qa-workflows/"},next:{title:"Example of automated tests",permalink:"/docs/managing-data-quality/testing-and-qa-workflows/set-up-automated-testing-with-snowplow-micro/example-of-automated-tests/"}},s={},c=[{value:"What is Snowplow Micro for?",id:"what-is-snowplow-micro-for",level:2},{value:"How do I run Snowplow Micro?",id:"how-do-i-run-snowplow-micro",level:2},{value:"Using Docker",id:"using-docker",level:4},{value:"Using Java",id:"using-java",level:4},{value:"REST API",id:"rest-api",level:2},{value:"/micro/all",id:"microall",level:3},{value:"HTTP method",id:"http-method",level:4},{value:"Response format",id:"response-format",level:4},{value:"/micro/good",id:"microgood",level:3},{value:"HTTP method",id:"http-method-1",level:4},{value:"Response format",id:"response-format-1",level:4},{value:"Filters",id:"filters",level:4},{value:"/micro/bad",id:"microbad",level:3},{value:"HTTP method",id:"http-method-2",level:4},{value:"Response format",id:"response-format-2",level:4},{value:"Filters",id:"filters-1",level:4},{value:"/micro/reset",id:"microreset",level:3},{value:"HTTP method",id:"http-method-3",level:4},{value:"Response format",id:"response-format-3",level:4},{value:"/micro/iglu",id:"microiglu",level:3},{value:"HTTP Method",id:"http-method-4",level:4},{value:"Response format",id:"response-format-4",level:4},{value:"Advanced usage: Embedded Iglu",id:"advanced-usage-embedded-iglu",level:2},{value:"Using Docker",id:"using-docker-1",level:4},{value:"Using Java",id:"using-java-1",level:4}],p={toc:c};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"snowplow-micro"},"Snowplow Micro"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/snowplow/snowplow-micro"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/docker/v/snowplow/snowplow-micro?sort=semver",alt:"Latest Docker image version"}))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/snowplow/snowplow-micro"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/docker/pulls/snowplow/snowplow-micro",alt:"Latest Docker image version"}))),(0,a.kt)("h2",{id:"what-is-snowplow-micro-for"},"What is Snowplow Micro for?"),(0,a.kt)("p",null,"Snowplow Micro is built to enable users to run automated test suites to ensure that new releases of their websites, mobile apps and server-side applications do not break the tracking setup and Snowplow data collection."),(0,a.kt)("p",null,"Snowplow Micro is a very small version of a full Snowplow data collection pipeline: small enough that it can be launched by a test suite. Events can be recorded into Snowplow Micro just as they can a full Snowplow pipeline. Micro then exposes an API that can be queried to understand:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"How many events have been received?"),(0,a.kt)("li",{parentName:"ul"},'How many of them were successfully processed vs ended up as "bad" (e.g. because the events failed validation against the corresponding schemas in the\xa0',(0,a.kt)("a",{parentName:"li",href:"https://github.com/snowplow/iglu"},"Iglu"),"\xa0Schema Registry)"),(0,a.kt)("li",{parentName:"ul"},"For any events that have successfully processed, what type of events they are, what fields have been recorded etc."),(0,a.kt)("li",{parentName:"ul"},"For any events that have not been successfully processed, what errors were generated on processing the events. (So these can be surfaced back via the test suite.)")),(0,a.kt)("p",null,"This means you can build automated test suites to assert that specific user behaviour in an application generates specific events that are successfully processed by Snowplow."),(0,a.kt)("h2",{id:"how-do-i-run-snowplow-micro"},"How do I run Snowplow Micro?"),(0,a.kt)("p",null,"Snowplow Micro is configured at runtime through the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/snowplow/stream-collector"},"Stream Collector")," configuration and the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/snowplow/iglu"},"Iglu")," resolver configuration. So, to start Snowplow Micro:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Update the stream-collector\xa0",(0,a.kt)("a",{parentName:"li",href:"https://github.com/snowplow-incubator/snowplow-micro/blob/master/example/micro.conf"},"configuration for Snowplow Micro")),(0,a.kt)("li",{parentName:"ol"},"Update the\xa0",(0,a.kt)("a",{parentName:"li",href:"https://github.com/snowplow-incubator/snowplow-micro/blob/master/example/iglu.json"},"configuration for Iglu resolvers")),(0,a.kt)("li",{parentName:"ol"},"Run Micro either using Docker or using Java.")),(0,a.kt)("h4",{id:"using-docker"},"Using Docker"),(0,a.kt)("p",null,"Snowplow Micro is hosted on Docker Hub: ",(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/snowplow/snowplow-micro"},"snowplow/snowplow-micro"),". (since version ",(0,a.kt)("inlineCode",{parentName:"p"},"1.2"),", Micro's Docker images support ",(0,a.kt)("inlineCode",{parentName:"p"},"amd64")," devices as well)."),(0,a.kt)("p",null,"The configuration files must be placed in a folder that is mounted in the Docker container, and the port configured for Micro needs to be exposed. For example, with configuration files in ",(0,a.kt)("inlineCode",{parentName:"p"},"./example")," directory and to bind port ",(0,a.kt)("inlineCode",{parentName:"p"},"9090"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docker run \\\n  --mount type=bind,source=$(pwd)/example,destination=/config \\\n  -p 9090:9090 \\\n  snowplow/snowplow-micro:1.3.1 \\\n  --collector-config /config/micro.conf \\\n  --iglu /config/iglu.json\n")),(0,a.kt)("h4",{id:"using-java"},"Using Java"),(0,a.kt)("p",null,"Alternatively, a Snowplow Micro jar file is hosted on the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/snowplow-incubator/snowplow-micro/releases"},"Github release")," page."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"java -jar snowplow-micro-1.3.1.jar --collector-config example/micro.conf --iglu example/iglu.json\n")),(0,a.kt)("h2",{id:"rest-api"},"REST API"),(0,a.kt)("p",null,"Snowplow Micro offers the following endpoints to query the data recorded."),(0,a.kt)("h3",{id:"microall"},"/micro/all"),(0,a.kt)("p",null,"This endpoint responds with a summary JSON object of the number of total, good and bad events currently in the cache."),(0,a.kt)("h4",{id:"http-method"},(0,a.kt)("a",{parentName:"h4",href:"https://github.com/snowplow-incubator/snowplow-micro/blob/master/README.md#http-method"}),"HTTP method"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"GET"),",\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"POST"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"OPTIONS")),(0,a.kt)("h4",{id:"response-format"},(0,a.kt)("a",{parentName:"h4",href:"https://github.com/snowplow-incubator/snowplow-micro/blob/master/README.md#response-format"}),"Response format"),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n  "total": 7,\n  "good": 5,\n  "bad": 2\n}\n')),(0,a.kt)("h3",{id:"microgood"},"/micro/good"),(0,a.kt)("p",null,"This endpoint queries the good events, which are the events that have been successfully validated."),(0,a.kt)("h4",{id:"http-method-1"},(0,a.kt)("a",{parentName:"h4",href:"https://github.com/snowplow-incubator/snowplow-micro/blob/master/README.md#http-method-1"}),"HTTP method"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"GET"),": get\xa0",(0,a.kt)("em",{parentName:"li"},"all"),"\xa0the good events from the cache."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"POST"),": get the good events with the possibility to filter.")),(0,a.kt)("h4",{id:"response-format-1"},(0,a.kt)("a",{parentName:"h4",href:"https://github.com/snowplow-incubator/snowplow-micro/blob/master/README.md#response-format-1"}),"Response format"),(0,a.kt)("p",null,"JSON array of\xa0",(0,a.kt)("a",{parentName:"p",href:"https://github.com/snowplow-incubator/snowplow-micro/blob/master/src/main/scala/com.snowplowanalytics.snowplow.micro/model.scala#L19"},"GoodEvent"),"s. A\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"GoodEvent"),"\xa0contains 4 fields:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rawEvent"),": contains the\xa0",(0,a.kt)("a",{parentName:"li",href:"https://github.com/snowplow/enrich/blob/master/modules/common/src/main/scala/com.snowplowanalytics.snowplow.enrich/common/adapters/RawEvent.scala#L28"},"RawEvent"),". It corresponds to the format of a validated event just before being enriched."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"event"),": contains the\xa0",(0,a.kt)("a",{parentName:"li",href:"https://github.com/snowplow/snowplow-scala-analytics-sdk/blob/master/src/main/scala/com.snowplowanalytics.snowplow.analytics.scalasdk/Event.scala#L42"},"canonical snowplow Event"),". It is in the format of an event after enrichment, even if all the enrichments are deactivated."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"eventType"),": type of the event."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"schema"),": schema of the event in case of an unstructured event."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"contexts"),": contexts of the event.")),(0,a.kt)("p",null,"An example of a response with one event can be found below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'[\n  {\n    "rawEvent":{\n      "api":{\n        "vendor":"com.snowplowanalytics.snowplow",\n        "version":"tp2"\n      },\n      "parameters":{\n        "e":"pv",\n        "duid":"36746fd2-8441-4ea2-8ad0-237d6f4c77cf",\n        "vid":"1",\n        "co":"{\\"schema\\":\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\\",\\"data\\":[{\\"schema\\":\\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\\",\\"data\\":{\\"id\\":\\"5cea9899-10df-4ccf-bf66-8c36f4a4bba2\\"}}]}",\n        "eid":"bee0a6d7-fc17-4392-b2bc-2208e8e944f3",\n        "url":"http://localhost:8000/",\n        "refr":"http://localhost:8000/__/",\n        "aid":"shop",\n        "tna":"sp1",\n        "cs":"UTF-8",\n        "cd":"24",\n        "stm":"1630238465752",\n        "tz":"Europe/London",\n        "tv":"js-3.1.3",\n        "vp":"1000x660",\n        "ds":"988x670",\n        "res":"1920x1080",\n        "cookie":"1",\n        "p":"web",\n        "dtm":"1630238465748",\n        "uid":"tester",\n        "lang":"en-US",\n        "sid":"6d15a4fb-9623-4ba1-b876-5240e72e6970"\n      },\n      "contentType":"application/json",\n      "source":{\n        "name":"ssc-2.3.1-stdout$",\n        "encoding":"UTF-8",\n        "hostname":"0.0.0.0"\n      },\n      "context":{\n        "timestamp":"2021-08-29T12:01:05.787Z",\n        "ipAddress":"172.17.0.1",\n        "useragent":"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0",\n        "refererUri":"http://localhost:8000/",\n        "headers":[\n          "Timeout-Access: <function1>",\n          "Connection: keep-alive",\n          "Host: 0.0.0.0:9090",\n          "User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0",\n          "Accept: */*",\n          "Accept-Language: en-US, en;q=0.5",\n          "Accept-Encoding: gzip",\n          "Referer: http://localhost:8000/",\n          "Origin: http://localhost:8000",\n          "Cookie: micro=3734601f-5c3d-47c5-b367-0883e1ed74e6",\n          "application/json"\n        ],\n        "userId":"3734601f-5c3d-47c5-b367-0883e1ed74e6"\n      }\n    },\n    "eventType":"page_view",\n    "schema":"iglu:com.snowplowanalytics.snowplow/page_view/jsonschema/1-0-0",\n    "contexts":[\n      "iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0"\n    ],\n    "event":{\n      "app_id":"shop",\n      "platform":"web",\n      "etl_tstamp":"2021-08-29T12:01:05.792Z",\n      "collector_tstamp":"2021-08-29T12:01:05.787Z",\n      "dvce_created_tstamp":"2021-08-29T12:01:05.748Z",\n      "event":"page_view",\n      "event_id":"bee0a6d7-fc17-4392-b2bc-2208e8e944f3",\n      "txn_id":null,\n      "name_tracker":"sp1",\n      "v_tracker":"js-3.1.3",\n      "v_collector":"ssc-2.3.1-stdout$",\n      "v_etl":"snowplow-micro-1.3.1-common-2.0.2",\n      "user_id":"tester",\n      "user_ipaddress":"172.17.0.1",\n      "user_fingerprint":null,\n      "domain_userid":"36746fd2-8441-4ea2-8ad0-237d6f4c77cf",\n      "domain_sessionidx":1,\n      "network_userid":"3734601f-5c3d-47c5-b367-0883e1ed74e6",\n      "geo_country":null,\n      "geo_region":null,\n      "geo_city":null,\n      "geo_zipcode":null,\n      "geo_latitude":null,\n      "geo_longitude":null,\n      "geo_region_name":null,\n      "ip_isp":null,\n      "ip_organization":null,\n      "ip_domain":null,\n      "ip_netspeed":null,\n      "page_url":"http://localhost:8000/",\n      "page_title":null,\n      "page_referrer":"http://localhost:8000/__/",\n      "page_urlscheme":"http",\n      "page_urlhost":"localhost",\n      "page_urlport":8000,\n      "page_urlpath":"/",\n      "page_urlquery":null,\n      "page_urlfragment":null,\n      "refr_urlscheme":"http",\n      "refr_urlhost":"localhost",\n      "refr_urlport":8000,\n      "refr_urlpath":"/__/",\n      "refr_urlquery":null,\n      "refr_urlfragment":null,\n      "refr_medium":null,\n      "refr_source":null,\n      "refr_term":null,\n      "mkt_medium":null,\n      "mkt_source":null,\n      "mkt_term":null,\n      "mkt_content":null,\n      "mkt_campaign":null,\n      "contexts":{\n        "schema":"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0",\n        "data":[\n          {\n            "schema":"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0",\n            "data":{\n              "id":"5cea9899-10df-4ccf-bf66-8c36f4a4bba2"\n            }\n          }\n        ]\n      },\n      "se_category":null,\n      "se_action":null,\n      "se_label":null,\n      "se_property":null,\n      "se_value":null,\n      "unstruct_event":null,\n      "tr_orderid":null,\n      "tr_affiliation":null,\n      "tr_total":null,\n      "tr_tax":null,\n      "tr_shipping":null,\n      "tr_city":null,\n      "tr_state":null,\n      "tr_country":null,\n      "ti_orderid":null,\n      "ti_sku":null,\n      "ti_name":null,\n      "ti_category":null,\n      "ti_price":null,\n      "ti_quantity":null,\n      "pp_xoffset_min":null,\n      "pp_xoffset_max":null,\n      "pp_yoffset_min":null,\n      "pp_yoffset_max":null,\n      "useragent":"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0",\n      "br_name":null,\n      "br_family":null,\n      "br_version":null,\n      "br_type":null,\n      "br_renderengine":null,\n      "br_lang":"en-US",\n      "br_features_pdf":null,\n      "br_features_flash":null,\n      "br_features_java":null,\n      "br_features_director":null,\n      "br_features_quicktime":null,\n      "br_features_realplayer":null,\n      "br_features_windowsmedia":null,\n      "br_features_gears":null,\n      "br_features_silverlight":null,\n      "br_cookies":true,\n      "br_colordepth":"24",\n      "br_viewwidth":1000,\n      "br_viewheight":660,\n      "os_name":null,\n      "os_family":null,\n      "os_manufacturer":null,\n      "os_timezone":"Europe/London",\n      "dvce_type":null,\n      "dvce_ismobile":null,\n      "dvce_screenwidth":1920,\n      "dvce_screenheight":1080,\n      "doc_charset":"UTF-8",\n      "doc_width":988,\n      "doc_height":670,\n      "tr_currency":null,\n      "tr_total_base":null,\n      "tr_tax_base":null,\n      "tr_shipping_base":null,\n      "ti_currency":null,\n      "ti_price_base":null,\n      "base_currency":null,\n      "geo_timezone":null,\n      "mkt_clickid":null,\n      "mkt_network":null,\n      "etl_tags":null,\n      "dvce_sent_tstamp":"2021-08-29T12:01:05.752Z",\n      "refr_domain_userid":null,\n      "refr_dvce_tstamp":null,\n      "derived_contexts":{},\n      "domain_sessionid":"6d15a4fb-9623-4ba1-b876-5240e72e6970",\n      "derived_tstamp":"2021-08-29T12:01:05.783Z",\n      "event_vendor":"com.snowplowanalytics.snowplow",\n      "event_name":"page_view",\n      "event_format":"jsonschema",\n      "event_version":"1-0-0",\n      "event_fingerprint":null,\n      "true_tstamp":null\n    }\n  }\n]\n')),(0,a.kt)("h4",{id:"filters"},(0,a.kt)("a",{parentName:"h4",href:"https://github.com/snowplow-incubator/snowplow-micro/blob/master/README.md#filters"}),"Filters"),(0,a.kt)("p",null,"When querying\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"/micro/good"),"\xa0with\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"POST"),"\xa0(",(0,a.kt)("inlineCode",{parentName:"p"},"Content-Type: application/json"),"\xa0needs to be set in the headers of the request), it's possible to specify filters, thanks to a JSON in the data of the HTTP request."),(0,a.kt)("p",null,"Example of command to query the good events:\xa0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl -X POST -H 'Content-Type: application/json' <IP:PORT>/micro/good -d '<JSON>'\n")),(0,a.kt)("p",null,"An example of JSON with filters could be:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{ \n  "schema": "iglu:com.acme/example/jsonschema/1-0-0",\n  "contexts": [\n    "com.snowplowanalytics.mobile/application/jsonschema/1-0-0",\n    "com.snowplowanalytics.mobile/screen/jsonschema/1-0-0"\n  ],\n  "limit": 10\n}\n')),(0,a.kt)("p",null,"List of possible fields for the filters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"event_type"),": type of the event (in\xa0",(0,a.kt)("inlineCode",{parentName:"li"},"e"),"\xa0param);"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"schema"),": corresponds to the shema of an\xa0",(0,a.kt)("a",{parentName:"li",href:"/docs/collecting-data/collecting-from-own-applications/snowplow-tracker-protocol/#Custom_unstructured_event_tracking"},"unstructured event"),"\xa0(schema of the self-describing JSON contained in\xa0",(0,a.kt)("inlineCode",{parentName:"li"},"ue_pr"),"\xa0or\xa0",(0,a.kt)("inlineCode",{parentName:"li"},"ue_px"),"). It automatically implies\xa0",(0,a.kt)("inlineCode",{parentName:"li"},"event_type"),"\xa0=\xa0",(0,a.kt)("inlineCode",{parentName:"li"},"ue"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"contexts"),": list of the schemas contained in the contexts of an event (parameters\xa0",(0,a.kt)("inlineCode",{parentName:"li"},"co"),"\xa0or\xa0",(0,a.kt)("inlineCode",{parentName:"li"},"cx"),"). An event must contain\xa0",(0,a.kt)("strong",{parentName:"li"},"all"),"\xa0the contexts of the list to be returned. It can also contain more contexts than the ones specified in the request."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"limit"),": limit the number of events in the response (most recent events are returned).")),(0,a.kt)("p",null,"It's not necessary to specify all the fields in a request, only the ones that need to be used for filtering."),(0,a.kt)("h3",{id:"microbad"},"/micro/bad"),(0,a.kt)("p",null,"This endpoint queries the bad events, which are the events that failed validation."),(0,a.kt)("h4",{id:"http-method-2"},(0,a.kt)("a",{parentName:"h4",href:"https://github.com/snowplow-incubator/snowplow-micro/blob/master/README.md#http-method-2"}),"HTTP method"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"GET"),": get\xa0",(0,a.kt)("em",{parentName:"li"},"all"),"\xa0the bad events from the cache."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"POST"),": get the bad events with the possibility to filter.")),(0,a.kt)("h4",{id:"response-format-2"},(0,a.kt)("a",{parentName:"h4",href:"https://github.com/snowplow-incubator/snowplow-micro/blob/master/README.md#response-format-2"}),"Response format"),(0,a.kt)("p",null,"JSON array of\xa0",(0,a.kt)("a",{parentName:"p",href:"https://github.com/snowplow-incubator/snowplow-micro/blob/master/src/main/scala/com.snowplowanalytics.snowplow.micro/model.scala#L28"},"BadEvent"),"s. A\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"BadEvent"),"\xa0contains 3 fields:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"collectorPayload"),": contains the\xa0",(0,a.kt)("a",{parentName:"li",href:"https://github.com/snowplow/enrich/blob/master/modules/common/src/main/scala/com.snowplowanalytics.snowplow.enrich/common/loaders/CollectorPayload.scala#L107"},"CollectorPayload"),"\xa0with all the raw information of the tracking event. This field can be empty if an error occured before trying to validate a payload."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rawEvent"),": contains the\xa0",(0,a.kt)("a",{parentName:"li",href:"https://github.com/snowplow/enrich/blob/master/modules/common/src/main/scala/com.snowplowanalytics.snowplow.enrich/common/adapters/RawEvent.scala#L28"},"RawEvent"),". It corresponds to the format of a validated event just before being enriched."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"errors"),": list of errors that occured during the validation of the tracking event.")),(0,a.kt)("p",null,"An example of a response with one bad event can be found below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'[\n  {\n    "collectorPayload":{\n      "api":{\n        "vendor":"com.snowplowanalytics.snowplow",\n        "version":"tp2"\n      },\n      "querystring":[],\n      "contentType":"application/json",\n      "body":"{\\"schema\\":\\"iglu:com.snowplowanalytics.snowplow/payload_data/jsonschema/1-0-4\\",\\"data\\":[{\\"e\\":\\"ue\\",\\"eid\\":\\"36c39024-7b1b-4c2c-ae85-e95a8cb8340a\\",\\"tv\\":\\"js-3.1.3\\",\\"tna\\":\\"spmicro\\",\\"aid\\":\\"sh0pspr33\\",\\"p\\":\\"web\\",\\"cookie\\":\\"1\\",\\"cs\\":\\"UTF-8\\",\\"lang\\":\\"en-US\\",\\"res\\":\\"1920x1080\\",\\"cd\\":\\"24\\",\\"tz\\":\\"Europe/London\\",\\"dtm\\":\\"1630234190717\\",\\"vp\\":\\"1000x660\\",\\"ds\\":\\"1003x2242\\",\\"vid\\":\\"1\\",\\"sid\\":\\"13c8f5ac-d999-4923-940d-b39f7b74aa94\\",\\"duid\\":\\"8a17bb29-e35c-4363-aec3-85b9b363f9bf\\",\\"uid\\":\\"tester\\",\\"refr\\":\\"http://localhost:8000/\\",\\"url\\":\\"http://localhost:8000/shop/\\",\\"ue_pr\\":\\"{\\\\\\"schema\\\\\\":\\\\\\"iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0\\\\\\",\\\\\\"data\\\\\\":{\\\\\\"schema\\\\\\":\\\\\\"iglu:test.example.iglu/cart_action_event/jsonschema/1-0-0\\\\\\",\\\\\\"data\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"add\\\\\\"}}}\\",\\"co\\":\\"{\\\\\\"schema\\\\\\":\\\\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\\\\\\",\\\\\\"data\\\\\\":[{\\\\\\"schema\\\\\\":\\\\\\"iglu:test.example.iglu/product_entity/jsonschema/1-0-0\\\\\\",\\\\\\"data\\\\\\":{\\\\\\"sku\\\\\\":\\\\\\"hh456\\\\\\",\\\\\\"name\\\\\\":\\\\\\"One-size bucket hat\\\\\\",\\\\\\"price\\\\\\":24.49,\\\\\\"quantity\\\\\\":\\\\\\"2\\\\\\"}},{\\\\\\"schema\\\\\\":\\\\\\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\\\\\\",\\\\\\"data\\\\\\":{\\\\\\"id\\\\\\":\\\\\\"fe0dd7c7-fb0b-43a2-b299-75d20baa94ec\\\\\\"}}]}\\",\\"stm\\":\\"1630234190719\\"}]}",\n      "source":{\n        "name":"ssc-2.3.1-stdout$",\n        "encoding":"UTF-8",\n        "hostname":"0.0.0.0"\n      },\n      "context":{\n        "timestamp":"2021-08-29T10:49:50.727Z",\n        "ipAddress":"172.17.0.1",\n        "useragent":"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0",\n        "refererUri":"http://localhost:8000/",\n        "headers":[\n          "Timeout-Access: <function1>",\n          "Connection: keep-alive",\n          "Host: 0.0.0.0:9090",\n          "User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0",\n          "Accept: */*",\n          "Accept-Language: en-US, en;q=0.5",\n          "Accept-Encoding: gzip",\n          "Referer: http://localhost:8000/",\n          "Origin: http://localhost:8000",\n          "Cookie: micro=3734601f-5c3d-47c5-b367-0883e1ed74e6",\n          "application/json"\n        ],\n        "userId":"3734601f-5c3d-47c5-b367-0883e1ed74e6"\n      }\n    },\n    "rawEvent":{\n      "api":{\n        "vendor":"com.snowplowanalytics.snowplow",\n        "version":"tp2"\n      },\n      "parameters":{\n        "e":"ue",\n        "duid":"8a17bb29-e35c-4363-aec3-85b9b363f9bf",\n        "vid":"1",\n        "co":"{\\"schema\\":\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\\",\\"data\\":[{\\"schema\\":\\"iglu:test.example.iglu/product_entity/jsonschema/1-0-0\\",\\"data\\":{\\"sku\\":\\"hh456\\",\\"name\\":\\"One-size bucket hat\\",\\"price\\":24.49,\\"quantity\\":\\"2\\"}},{\\"schema\\":\\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\\",\\"data\\":{\\"id\\":\\"fe0dd7c7-fb0b-43a2-b299-75d20baa94ec\\"}}]}",\n        "eid":"36c39024-7b1b-4c2c-ae85-e95a8cb8340a",\n        "url":"http://localhost:8000/shop/",\n        "refr":"http://localhost:8000/",\n        "aid":"sh0pspr33",\n        "tna":"spmicro",\n        "cs":"UTF-8",\n        "cd":"24",\n        "stm":"1630234190719",\n        "tz":"Europe/London",\n        "tv":"js-3.1.3",\n        "vp":"1000x660",\n        "ds":"1003x2242",\n        "ue_pr":"{\\"schema\\":\\"iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0\\",\\"data\\":{\\"schema\\":\\"iglu:test.example.iglu/cart_action_event/jsonschema/1-0-0\\",\\"data\\":{\\"type\\":\\"add\\"}}}",\n        "res":"1920x1080",\n        "cookie":"1",\n        "p":"web",\n        "dtm":"1630234190717",\n        "uid":"tester",\n        "lang":"en-US",\n        "sid":"13c8f5ac-d999-4923-940d-b39f7b74aa94"\n      },\n      "contentType":"application/json",\n      "source":{\n        "name":"ssc-2.3.1-stdout$",\n        "encoding":"UTF-8",\n        "hostname":"0.0.0.0"\n      },\n      "context":{\n        "timestamp":"2021-08-29T10:49:50.727Z",\n        "ipAddress":"172.17.0.1",\n        "useragent":"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0",\n        "refererUri":"http://localhost:8000/",\n        "headers":[\n          "Timeout-Access: <function1>",\n          "Connection: keep-alive",\n          "Host: 0.0.0.0:9090",\n          "User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0",\n          "Accept: */*",\n          "Accept-Language: en-US, en;q=0.5",\n          "Accept-Encoding: gzip",\n          "Referer: http://localhost:8000/",\n          "Origin: http://localhost:8000",\n          "Cookie: micro=3734601f-5c3d-47c5-b367-0883e1ed74e6",\n          "application/json"\n        ],\n        "userId":"3734601f-5c3d-47c5-b367-0883e1ed74e6"\n      }\n    },\n    "errors":[\n      "Error while validating the event",\n      "{\\"schema\\":\\"iglu:com.snowplowanalytics.snowplow.badrows/schema_violations/jsonschema/2-0-0\\",\\"data\\":{\\"processor\\":{\\"artifact\\":\\"snowplow-micro\\",\\"version\\":\\"1.2.1\\"},\\"failure\\":{\\"timestamp\\":\\"2021-08-29T10:49:50.739178Z\\",\\"messages\\":[{\\"schemaKey\\":\\"iglu:test.example.iglu/product_entity/jsonschema/1-0-0\\",\\"error\\":{\\"error\\":\\"ValidationError\\",\\"dataReports\\":[{\\"message\\":\\"$.quantity: string found, integer expected\\",\\"path\\":\\"$.quantity\\",\\"keyword\\":\\"type\\",\\"targets\\":[\\"string\\",\\"integer\\"]}]}}]},\\"payload\\":{\\"enriched\\":{\\"app_id\\":\\"sh0pspr33\\",\\"platform\\":\\"web\\",\\"etl_tstamp\\":\\"2021-08-29 10:49:50.731\\",\\"collector_tstamp\\":\\"2021-08-29 10:49:50.727\\",\\"dvce_created_tstamp\\":\\"2021-08-29 10:49:50.717\\",\\"event\\":\\"unstruct\\",\\"event_id\\":\\"36c39024-7b1b-4c2c-ae85-e95a8cb8340a\\",\\"txn_id\\":null,\\"name_tracker\\":\\"spmicro\\",\\"v_tracker\\":\\"js-3.1.3\\",\\"v_collector\\":\\"ssc-2.3.1-stdout$\\",\\"v_etl\\":\\"snowplow-micro-1.2.1-common-2.0.2\\",\\"user_id\\":\\"tester\\",\\"user_ipaddress\\":\\"172.17.0.1\\",\\"user_fingerprint\\":null,\\"domain_userid\\":\\"8a17bb29-e35c-4363-aec3-85b9b363f9bf\\",\\"domain_sessionidx\\":1,\\"network_userid\\":\\"3734601f-5c3d-47c5-b367-0883e1ed74e6\\",\\"geo_country\\":null,\\"geo_region\\":null,\\"geo_city\\":null,\\"geo_zipcode\\":null,\\"geo_latitude\\":null,\\"geo_longitude\\":null,\\"geo_region_name\\":null,\\"ip_isp\\":null,\\"ip_organization\\":null,\\"ip_domain\\":null,\\"ip_netspeed\\":null,\\"page_url\\":\\"http://localhost:8000/shop/\\",\\"page_title\\":null,\\"page_referrer\\":\\"http://localhost:8000/\\",\\"page_urlscheme\\":null,\\"page_urlhost\\":null,\\"page_urlport\\":null,\\"page_urlpath\\":null,\\"page_urlquery\\":null,\\"page_urlfragment\\":null,\\"refr_urlscheme\\":null,\\"refr_urlhost\\":null,\\"refr_urlport\\":null,\\"refr_urlpath\\":null,\\"refr_urlquery\\":null,\\"refr_urlfragment\\":null,\\"refr_medium\\":null,\\"refr_source\\":null,\\"refr_term\\":null,\\"mkt_medium\\":null,\\"mkt_source\\":null,\\"mkt_term\\":null,\\"mkt_content\\":null,\\"mkt_campaign\\":null,\\"contexts\\":\\"{\\\\\\"schema\\\\\\":\\\\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\\\\\\",\\\\\\"data\\\\\\":[{\\\\\\"schema\\\\\\":\\\\\\"iglu:test.example.iglu/product_entity/jsonschema/1-0-0\\\\\\",\\\\\\"data\\\\\\":{\\\\\\"sku\\\\\\":\\\\\\"hh456\\\\\\",\\\\\\"name\\\\\\":\\\\\\"One-size bucket hat\\\\\\",\\\\\\"price\\\\\\":24.49,\\\\\\"quantity\\\\\\":\\\\\\"2\\\\\\"}},{\\\\\\"schema\\\\\\":\\\\\\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\\\\\\",\\\\\\"data\\\\\\":{\\\\\\"id\\\\\\":\\\\\\"fe0dd7c7-fb0b-43a2-b299-75d20baa94ec\\\\\\"}}]}\\",\\"se_category\\":null,\\"se_action\\":null,\\"se_label\\":null,\\"se_property\\":null,\\"se_value\\":null,\\"unstruct_event\\":\\"{\\\\\\"schema\\\\\\":\\\\\\"iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0\\\\\\",\\\\\\"data\\\\\\":{\\\\\\"schema\\\\\\":\\\\\\"iglu:test.example.iglu/cart_action_event/jsonschema/1-0-0\\\\\\",\\\\\\"data\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"add\\\\\\"}}}\\",\\"tr_orderid\\":null,\\"tr_affiliation\\":null,\\"tr_total\\":null,\\"tr_tax\\":null,\\"tr_shipping\\":null,\\"tr_city\\":null,\\"tr_state\\":null,\\"tr_country\\":null,\\"ti_orderid\\":null,\\"ti_sku\\":null,\\"ti_name\\":null,\\"ti_category\\":null,\\"ti_price\\":null,\\"ti_quantity\\":null,\\"pp_xoffset_min\\":null,\\"pp_xoffset_max\\":null,\\"pp_yoffset_min\\":null,\\"pp_yoffset_max\\":null,\\"useragent\\":\\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0\\",\\"br_name\\":null,\\"br_family\\":null,\\"br_version\\":null,\\"br_type\\":null,\\"br_renderengine\\":null,\\"br_lang\\":\\"en-US\\",\\"br_features_pdf\\":null,\\"br_features_flash\\":null,\\"br_features_java\\":null,\\"br_features_director\\":null,\\"br_features_quicktime\\":null,\\"br_features_realplayer\\":null,\\"br_features_windowsmedia\\":null,\\"br_features_gears\\":null,\\"br_features_silverlight\\":null,\\"br_cookies\\":1,\\"br_colordepth\\":\\"24\\",\\"br_viewwidth\\":1000,\\"br_viewheight\\":660,\\"os_name\\":null,\\"os_family\\":null,\\"os_manufacturer\\":null,\\"os_timezone\\":\\"Europe/London\\",\\"dvce_type\\":null,\\"dvce_ismobile\\":null,\\"dvce_screenwidth\\":1920,\\"dvce_screenheight\\":1080,\\"doc_charset\\":\\"UTF-8\\",\\"doc_width\\":1003,\\"doc_height\\":2242,\\"tr_currency\\":null,\\"tr_total_base\\":null,\\"tr_tax_base\\":null,\\"tr_shipping_base\\":null,\\"ti_currency\\":null,\\"ti_price_base\\":null,\\"base_currency\\":null,\\"geo_timezone\\":null,\\"mkt_clickid\\":null,\\"mkt_network\\":null,\\"etl_tags\\":null,\\"dvce_sent_tstamp\\":\\"2021-08-29 10:49:50.719\\",\\"refr_domain_userid\\":null,\\"refr_dvce_tstamp\\":null,\\"derived_contexts\\":null,\\"domain_sessionid\\":\\"13c8f5ac-d999-4923-940d-b39f7b74aa94\\",\\"derived_tstamp\\":null,\\"event_vendor\\":null,\\"event_name\\":null,\\"event_format\\":null,\\"event_version\\":null,\\"event_fingerprint\\":null,\\"true_tstamp\\":null},\\"raw\\":{\\"vendor\\":\\"com.snowplowanalytics.snowplow\\",\\"version\\":\\"tp2\\",\\"parameters\\":[{\\"name\\":\\"e\\",\\"value\\":\\"ue\\"},{\\"name\\":\\"duid\\",\\"value\\":\\"8a17bb29-e35c-4363-aec3-85b9b363f9bf\\"},{\\"name\\":\\"vid\\",\\"value\\":\\"1\\"},{\\"name\\":\\"co\\",\\"value\\":\\"{\\\\\\"schema\\\\\\":\\\\\\"iglu:com.snowplowanalytics.snowplow/contexts/jsonschema/1-0-0\\\\\\",\\\\\\"data\\\\\\":[{\\\\\\"schema\\\\\\":\\\\\\"iglu:test.example.iglu/product_entity/jsonschema/1-0-0\\\\\\",\\\\\\"data\\\\\\":{\\\\\\"sku\\\\\\":\\\\\\"hh456\\\\\\",\\\\\\"name\\\\\\":\\\\\\"One-size bucket hat\\\\\\",\\\\\\"price\\\\\\":24.49,\\\\\\"quantity\\\\\\":\\\\\\"2\\\\\\"}},{\\\\\\"schema\\\\\\":\\\\\\"iglu:com.snowplowanalytics.snowplow/web_page/jsonschema/1-0-0\\\\\\",\\\\\\"data\\\\\\":{\\\\\\"id\\\\\\":\\\\\\"fe0dd7c7-fb0b-43a2-b299-75d20baa94ec\\\\\\"}}]}\\"},{\\"name\\":\\"eid\\",\\"value\\":\\"36c39024-7b1b-4c2c-ae85-e95a8cb8340a\\"},{\\"name\\":\\"url\\",\\"value\\":\\"http://localhost:8000/shop/\\"},{\\"name\\":\\"refr\\",\\"value\\":\\"http://localhost:8000/\\"},{\\"name\\":\\"aid\\",\\"value\\":\\"sh0pspr33\\"},{\\"name\\":\\"tna\\",\\"value\\":\\"spmicro\\"},{\\"name\\":\\"cs\\",\\"value\\":\\"UTF-8\\"},{\\"name\\":\\"cd\\",\\"value\\":\\"24\\"},{\\"name\\":\\"stm\\",\\"value\\":\\"1630234190719\\"},{\\"name\\":\\"tz\\",\\"value\\":\\"Europe/London\\"},{\\"name\\":\\"tv\\",\\"value\\":\\"js-3.1.3\\"},{\\"name\\":\\"vp\\",\\"value\\":\\"1000x660\\"},{\\"name\\":\\"ds\\",\\"value\\":\\"1003x2242\\"},{\\"name\\":\\"ue_pr\\",\\"value\\":\\"{\\\\\\"schema\\\\\\":\\\\\\"iglu:com.snowplowanalytics.snowplow/unstruct_event/jsonschema/1-0-0\\\\\\",\\\\\\"data\\\\\\":{\\\\\\"schema\\\\\\":\\\\\\"iglu:test.example.iglu/cart_action_event/jsonschema/1-0-0\\\\\\",\\\\\\"data\\\\\\":{\\\\\\"type\\\\\\":\\\\\\"add\\\\\\"}}}\\"},{\\"name\\":\\"res\\",\\"value\\":\\"1920x1080\\"},{\\"name\\":\\"cookie\\",\\"value\\":\\"1\\"},{\\"name\\":\\"p\\",\\"value\\":\\"web\\"},{\\"name\\":\\"dtm\\",\\"value\\":\\"1630234190717\\"},{\\"name\\":\\"uid\\",\\"value\\":\\"tester\\"},{\\"name\\":\\"lang\\",\\"value\\":\\"en-US\\"},{\\"name\\":\\"sid\\",\\"value\\":\\"13c8f5ac-d999-4923-940d-b39f7b74aa94\\"}],\\"contentType\\":\\"application/json\\",\\"loaderName\\":\\"ssc-2.3.1-stdout$\\",\\"encoding\\":\\"UTF-8\\",\\"hostname\\":\\"0.0.0.0\\",\\"timestamp\\":\\"2021-08-29T10:49:50.727Z\\",\\"ipAddress\\":\\"172.17.0.1\\",\\"useragent\\":\\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0\\",\\"refererUri\\":\\"http://localhost:8000/\\",\\"headers\\":[\\"Timeout-Access: <function1>\\",\\"Connection: keep-alive\\",\\"Host: 0.0.0.0:9090\\",\\"User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0\\",\\"Accept: */*\\",\\"Accept-Language: en-US, en;q=0.5\\",\\"Accept-Encoding: gzip\\",\\"Referer: http://localhost:8000/\\",\\"Origin: http://localhost:8000\\",\\"Cookie: micro=3734601f-5c3d-47c5-b367-0883e1ed74e6\\",\\"application/json\\"],\\"userId\\":\\"3734601f-5c3d-47c5-b367-0883e1ed74e6\\"}}}}"\n    ]\n  }\n]\n')),(0,a.kt)("h4",{id:"filters-1"},(0,a.kt)("a",{parentName:"h4",href:"https://github.com/snowplow-incubator/snowplow-micro/blob/master/README.md#filters-1"}),"Filters"),(0,a.kt)("p",null,"When querying\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"/micro/bad"),"\xa0with\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"POST"),"\xa0(",(0,a.kt)("inlineCode",{parentName:"p"},"Content-Type: application/json"),"\xa0needs to be set in the headers of the request), it's possible to specify filters, thanks to a JSON in the data of the HTTP request."),(0,a.kt)("p",null,"Example of command to query the bad events:\xa0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl -X POST -H 'Content-Type: application/json' <IP:PORT>/micro/bad -d '<JSON>'\n")),(0,a.kt)("p",null,"An example of JSON with filters could be:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n    "vendor":"com.snowplowanalytics.snowplow",\n    "version":"tp2",\n    "limit": 10\n}\n')),(0,a.kt)("p",null,"List of possible fields for the filters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"vendor"),": vendor for the tracking event."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"version"),": version of the vendor for the tracking event."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"limit"),": limit the number of events in the response (most recent events are returned).")),(0,a.kt)("p",null,"It's not necessary to specify all the fields in each request, only the ones that need to be used for filtering."),(0,a.kt)("h3",{id:"microreset"},"/micro/reset"),(0,a.kt)("p",null,"Sending a request to this endpoint resets Micro's cache."),(0,a.kt)("h4",{id:"http-method-3"},(0,a.kt)("a",{parentName:"h4",href:"https://github.com/snowplow-incubator/snowplow-micro/blob/master/README.md#http-method-3"}),"HTTP method"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"GET"),",\xa0",(0,a.kt)("inlineCode",{parentName:"p"},"POST")),(0,a.kt)("h4",{id:"response-format-3"},(0,a.kt)("a",{parentName:"h4",href:"https://github.com/snowplow-incubator/snowplow-micro/blob/master/README.md#response-format-3"}),"Response format"),(0,a.kt)("p",null,"Expected:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n  "total": 0,\n  "good": 0,\n  "bad": 0\n}\n')),(0,a.kt)("h3",{id:"microiglu"},"/micro/iglu"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"*","*","New in v1.2","*","*")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"/micro/iglu")," endpoint can be used in order to check whether a schema can be resolved."),(0,a.kt)("p",null,"Schema lookup should be in format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"/micro/iglu/{vendor}/{schemaName}/jsonschema/{schemaVersion}\n")),(0,a.kt)("p",null,"Or more specifically:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"/micro/iglu/{vendor}/{schemaName}/jsonschema/{model}-{revision}-{addition}\n")),(0,a.kt)("p",null,"For example, assuming Micro running on localhost port ",(0,a.kt)("inlineCode",{parentName:"p"},"9090"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl -X GET http://localhost:9090/micro/iglu/com.myvendor/myschema/jsonschema/1-0-0\n")),(0,a.kt)("h4",{id:"http-method-4"},"HTTP Method"),(0,a.kt)("p",null,"GET"),(0,a.kt)("h4",{id:"response-format-4"},"Response format"),(0,a.kt)("p",null,"The JSON schema itself, if resolved:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n  "$schema":"http://iglucentral.com/schemas/com.snowplowanalytics.self-desc/schema/jsonschema/1-0-0#",\n  "description":"A template for a self-describing JSON Schema for use with Iglu",\n  "self": {\n    "vendor":"com.myvendor",\n    "name":"myschema",\n    "format":"jsonschema",\n    "version":"1-0-0"\n  },\n  "type":"object",\n  "properties": {\n    "myStringProperty": {\n      "type":"string"\n    },\n    "myNumberProperty":{\n      "type":"number"\n    }\n  },\n  "required": ["myStringProperty","myNumberProperty"],\n  "additionalProperties":false\n}\n')),(0,a.kt)("p",null,"If a schema cannot be resolved, a JSON indicating the Iglu repositories searched:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n  "value": {\n    "Iglu Central": {\n      "errors": [{"error":"NotFound"}],\n      "attempts":1,\n      "lastAttempt":"2021-08-26T13:41:06.905Z"\n    },\n    "Iglu Client Embedded": {\n      "errors": [{"error":"NotFound"}],\n      "attempts":1,\n      "lastAttempt":"2021-08-26T13:41:06.677Z"\n    }\n  }\n}\n')),(0,a.kt)("h2",{id:"advanced-usage-embedded-iglu"},"Advanced usage: Embedded Iglu"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"*","*","New in v1.2","*","*")),(0,a.kt)("p",null,"In order to support a broader range of test workflows, it is possible to use an embedded Iglu with Snowplow Micro. Users can now choose to embed their custom schemas inside Micro to be resolved during their test worflows."),(0,a.kt)("p",null,"In order to do so, they simply need an ",(0,a.kt)("inlineCode",{parentName:"p"},"iglu-client-embedded")," directory (templated as an Iglu repository) under the same directory that is mounted when starting Micro."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"example\n\u251c\u2500\u2500 iglu-client-embedded\n\u2502   \u2514\u2500\u2500 schemas\n\u2502       \u2514\u2500\u2500 com.myvendor\n\u2502           \u2514\u2500\u2500 myschema\n\u2502               \u2514\u2500\u2500 jsonschema\n\u2502                   \u2514\u2500\u2500 1-0-0\n\u251c\u2500\u2500 iglu.json\n\u2514\u2500\u2500 micro.conf\n")),(0,a.kt)("h4",{id:"using-docker-1"},"Using Docker"),(0,a.kt)("p",null,"Using Docker, in order to use the embedded Iglu capabilities, the command remains the same:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docker run \\\n  --mount type=bind,source=$(pwd)/example,destination=/config \\\n  -p 9090:9090 \\\n  snowplow/snowplow-micro:1.3.1 \\\n  --collector-config /config/micro.conf \\\n  --iglu /config/iglu.json\n")),(0,a.kt)("h4",{id:"using-java-1"},"Using Java"),(0,a.kt)("p",null,"If you cannot use Docker and you also want an embedded Iglu, apply the same directory structure as shown above and run for this example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"# Unix\njava -cp snowplow-micro-1.3.1.jar:example com.snowplowanalytics.snowplow.micro.Main --collector-config example/micro.conf --iglu example/iglu.json\n# Windows\njava -cp snowplow-micro-1.3.1.jar;example com.snowplowanalytics.snowplow.micro.Main --collector-config example/micro.conf --iglu example/iglu.json\n")),(0,a.kt)("p",null,"Now you can also check that your embedded schemas can be resolved by using the ",(0,a.kt)("inlineCode",{parentName:"p"},"/micro/iglu")," endpoint."))}u.isMDXComponent=!0}}]);