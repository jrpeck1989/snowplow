"use strict";(self.webpackChunkdocsite_poc_github_io=self.webpackChunkdocsite_poc_github_io||[]).push([[61558],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(r),h=n,m=d["".concat(s,".").concat(h)]||d[h]||c[h]||o;return r?a.createElement(m,i(i({ref:t},u),{},{components:r})):a.createElement(m,i({ref:t},u))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},97874:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=r(87462),n=(r(67294),r(3905));const o={title:"Quick Start FAQs",date:"2021-07-08",sidebar_position:200},i=void 0,l={unversionedId:"open-source-quick-start/quick-start-faqs/index",id:"open-source-quick-start/quick-start-faqs/index",title:"Quick Start FAQs",description:"Why is there a limit on throughput?",source:"@site/docs/open-source-quick-start/quick-start-faqs/index.md",sourceDirName:"open-source-quick-start/quick-start-faqs",slug:"/open-source-quick-start/quick-start-faqs/",permalink:"/docs/open-source-quick-start/quick-start-faqs/",draft:!1,editUrl:"https://github.com/snowplow/snowplow.github.io/tree/main/docs/open-source-quick-start/quick-start-faqs/index.md",tags:[],version:"current",lastUpdatedAt:1662725915,formattedLastUpdatedAt:"Sep 9, 2022",sidebarPosition:200,frontMatter:{title:"Quick Start FAQs",date:"2021-07-08",sidebar_position:200},sidebar:"defaultSidebar",previous:{title:"Tutorials",permalink:"/docs/open-source-quick-start/further-exploration/tutorials/"},next:{title:"Understanding your pipeline",permalink:"/docs/understanding-your-pipeline/"}},s={},p=[{value:"Why is there a limit on throughput?",id:"why-is-there-a-limit-on-throughput",level:4},{value:"How do I shut down the pipeline?",id:"how-do-i-shut-down-the-pipeline",level:4},{value:"How do I make the pipeline production ready?",id:"how-do-i-make-the-pipeline-production-ready",level:4},{value:"How do I upgrade the version of the application that I am using?",id:"how-do-i-upgrade-the-version-of-the-application-that-i-am-using",level:4},{value:"Which enrichments are enabled by default?",id:"which-enrichments-are-enabled-by-default",level:4},{value:"Troubleshooting Terraform Errors",id:"troubleshooting-terraform-errors",level:4}],u={toc:p};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"why-is-there-a-limit-on-throughput"},"Why is there a limit on throughput?"),(0,n.kt)("p",null,"Each Snowplow application is deployed as a docker image on a single EC2/ CE instance. This, along with the streams themselves (AWS only), are the limiting factor when it comes to throughput. We made this decision for the following reasons:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"We wanted to keep the costs of this experience low, and using ECS fargate or kubernetes would be more expensive\xa0"),(0,n.kt)("li",{parentName:"ul"},"A single instance per application is more than enough resource for a proof of concept or first production use case and to get you started with our OSS")),(0,n.kt)("h4",{id:"how-do-i-shut-down-the-pipeline"},"How do I shut down the pipeline?"),(0,n.kt)("p",null,"If you would like to shut down your pipeline then you can easily do so by running ",(0,n.kt)("inlineCode",{parentName:"p"},"terraform destroy"),"."),(0,n.kt)("p",null,"Note that if you want to delete your S3 bucket and Postgres databases you would need to do that from within the AWS or Google cloud console. If you want to maintain these then you can - just be aware that next time you spin up your pipeline you might see errors when the script to create the S3 bucket and Postgres DBs is running."),(0,n.kt)("h4",{id:"how-do-i-make-the-pipeline-production-ready"},"How do I make the pipeline production ready?"),(0,n.kt)("p",null,"If you are at the point where you would like to deliver higher volume production use cases, then here are some general guidelines on delivering a highly available, auto scaling pipeline:"),(0,n.kt)("p",null,"On AWS:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Ensure you are using the ",(0,n.kt)("inlineCode",{parentName:"li"},"secure")," variant of the Quick Start"),(0,n.kt)("li",{parentName:"ul"},"Setting up CloudWatch alarms and Auto-scaling for each pipeline component",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"You can find extensive documentation on AWS CloudWatch which will guide you on what needs to be done to deliver a highly available, autoscaling pipeline"))),(0,n.kt)("li",{parentName:"ul"},"Set your Collector min","_","size to 2 at a minimum to ensure availability in case of availability zone outages: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/snowplow-devops/terraform-aws-collector-kinesis-ec2/blob/main/variables.tf#L60-L70"},"https://github.com/snowplow-devops/terraform-aws-collector-kinesis-ec2/blob/main/variables.tf#L60-L70")),(0,n.kt)("li",{parentName:"ul"},"Set up your max","_","size for all the EC2 groups to a number bigger than 2 to ensure they can scale horizontally"),(0,n.kt)("li",{parentName:"ul"},"Ensure your RDS instances are setup with multi availability zones configured: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/snowplow-devops/terraform-aws-rds/blob/main/variables.tf#L92-L96"},"https://github.com/snowplow-devops/terraform-aws-rds/blob/main/variables.tf#L92-L96")),(0,n.kt)("li",{parentName:"ul"},"Set the max","_","kcl","_","capacity for read & write to something substantially higher than the default (it will auto-scale up to that limit) - its the same variables for all Kinesis consumers (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/snowplow-devops/terraform-aws-enrich-kinesis-ec2/blob/main/variables.tf#L63-L85"},"https://github.com/snowplow-devops/terraform-aws-enrich-kinesis-ec2/blob/main/variables.tf#L63-L85"),")"),(0,n.kt)("li",{parentName:"ul"},"Ensure your RDS for the Postgres Loaders can auto-scale its capacity - this will mean you won't run out of disk when you start tracking events in:\xa0",(0,n.kt)("a",{parentName:"li",href:"https://github.com/snowplow-devops/terraform-aws-rds/blob/main/variables.tf#L62-L66"},"https://github.com/snowplow-devops/terraform-aws-rds/blob/main/variables.tf#L62-L66"))),(0,n.kt)("h4",{id:"how-do-i-upgrade-the-version-of-the-application-that-i-am-using"},"How do I upgrade the version of the application that I am using?"),(0,n.kt)("p",null,"We release new versions of our pipeline components very frequently; however the versions used within the terraform modules are updated ",(0,n.kt)("a",{parentName:"p",href:"https://snowplowanalytics.com/blog/2021/04/29/introducing-snowplow-21-04-pennine-alps/"},"in line with our platform releases")," since these are the most stable and recommended versions of our components.\xa0",(0,n.kt)("a",{parentName:"p",href:"https://go.snowplowanalytics.com/get-snowplow-technology-updates"},"Sign-up to get the latest updates")," on platform releases and new features. \xa0"),(0,n.kt)("p",null,"When a new version of a module is released, follow these instructions to upgrade:\xa0"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Update the module version in your terraform"),(0,n.kt)("li",{parentName:"ul"},"Run ",(0,n.kt)("inlineCode",{parentName:"li"},"terraform plan")," to check for what changes will be made")),(0,n.kt)("p",null,"With the standard deployment, you will only have a single collector instance. This means you will experience brief downtime, typically less than a minute. To prevent this you will need to move to multiple collector set up, so there are multiple collector instances behind the load balancer."),(0,n.kt)("h4",{id:"which-enrichments-are-enabled-by-default"},"Which enrichments are enabled by default?"),(0,n.kt)("p",null,"The following enrichments are enabled by default within the Enrich module:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/enriching-your-data/available-enrichments/ua-parser-enrichment/"},"UA parser")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/enriching-your-data/available-enrichments/yauaa-enrichment/"},"YAUAA")," "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/enriching-your-data/available-enrichments/campaign-attribution-enrichment/"},"Campaign Attribution")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/enriching-your-data/available-enrichments/event-fingerprint-enrichment/"},"Event fingerprint")," "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/enriching-your-data/available-enrichments/referrer-parser-enrichment/"},"Referer parser"))),(0,n.kt)("p",null,"Other available enrichments enrichments and the configurations can be found ",(0,n.kt)("a",{parentName:"p",href:"/docs/enriching-your-data/available-enrichments/"},"here.")),(0,n.kt)("p",null,"To enable a different enrichment would need to add the ",(0,n.kt)("a",{parentName:"p",href:"https://registry.terraform.io/modules/snowplow-devops/enrich-kinesis-ec2/aws/latest?tab=inputs"},"appropriate terraform inputs")," to the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/snowplow/quickstart-examples/blob/main/terraform/aws/pipeline/default/main.tf#L111-L139"},(0,n.kt)("inlineCode",{parentName:"a"},"snowplow-devops/enrich-kinesis-ec2/aws"),"\xa0module.")),(0,n.kt)("h4",{id:"troubleshooting-terraform-errors"},"Troubleshooting Terraform Errors"),(0,n.kt)("p",null,"The following are some common errors that you might encounter when running ",(0,n.kt)("inlineCode",{parentName:"p"},"terraform plan")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"terraform apply"),"."),(0,n.kt)("p",null,"AWS:"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Error: Invalid provider configuration")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},'Provider "registry.terraform.io/hashicorp/aws" requires explicit configuration. Add a provider block to the root module and configure the provider\'s required arguments as described in the provider documentation.')),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Solution:")," Double check that your AWS Access Key ID and AWS Secret Access Key are set up correctly (with no typos) using the ",(0,n.kt)("inlineCode",{parentName:"p"},"aws configured")," command."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Error:")," ",(0,n.kt)("strong",{parentName:"p"},'"x.x.x.x" is not a valid CIDR block')),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},'"x.x.x.x" is not a valid CIDR block: invalid CIDR address: x.x.x.x with module.iglu_server.aws_security_group_rule.ingress_tcp_22, on .terraform/modules/iglu_server/main.tf line 143, in resource "aws_security_group_rule" "ingress_tcp_22": 143: \xa0 cidr_blocks \xa0 \xa0 \xa0 = var.ssh_ip_allowlist')),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Solution"),": Add a mask to the IP in your terraform.tvars file, e.g. x.x.x.x/32"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Error creating application Load Balancer")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"ValidationError: At least two subnets in two different Availability Zones must be specified status code: 400")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Solution"),": Add subnets to cover at least 2 availability zones. See this ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/create-public-private-vpc.html"},"AWS guide")," on how to set this up."),(0,n.kt)("p",null,"After this step, add the two freshly created subnets to your ",(0,n.kt)("inlineCode",{parentName:"p"},"terraform.tfvars")," file like this: public","_","subnet","_","ids = ","[",'"subnet-00000000", "subnet-00000001"',"]"," and run ",(0,n.kt)("inlineCode",{parentName:"p"},"terraform apply")," again."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Error creating DB Subnet Group")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"DBSubnetGroupDoesNotCoverEnoughAZs: DB Subnet Group doesn't meet availability zone coverage requirement. Please add subnets to cover at least 2 availability zones. Current coverage: 1 status code: 400")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Solution"),": Add subnets to cover at least 2 availability zones. See this ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/create-public-private-vpc.html"},"AWS guide")," on how to set this up."),(0,n.kt)("p",null,"After this step, add the two freshly created subnets to your ",(0,n.kt)("inlineCode",{parentName:"p"},"terraform.tfvars")," file like this: public","_","subnet","_","ids = ","[",'"subnet-00000000", "subnet-00000001"',"]"," and run ",(0,n.kt)("inlineCode",{parentName:"p"},"terraform apply")," again. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Error creating DB Instance: InvalidParameterValue")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"The parameter MasterUserPassword is not a valid password. Only printable ASCII characters besides '/', '@', '\"', ' ' may be used.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Solution"),": Modify the iglu","_","db","_","password in your terraform.tfvars file so that it does not contain any forbidden characters like '","_","', '","*","'. Make sure the password is not longer than 13 characters."))}c.isMDXComponent=!0}}]);