"use strict";(self.webpackChunkdocsite_poc_github_io=self.webpackChunkdocsite_poc_github_io||[]).push([[35634],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,k=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(k,l(l({ref:t},s),{},{components:n})):a.createElement(k,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},63879:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={title:"Tracking Events",date:"2021-04-07",sidebar_position:4e3},l=void 0,o={unversionedId:"collecting-data/collecting-from-own-applications/javascript-trackers/node-js-tracker/node-js-tracker-v3/tracking-events/index",id:"collecting-data/collecting-from-own-applications/javascript-trackers/node-js-tracker/node-js-tracker-v3/tracking-events/index",title:"Tracking Events",description:"Tracking specific events",source:"@site/docs/collecting-data/collecting-from-own-applications/javascript-trackers/node-js-tracker/node-js-tracker-v3/tracking-events/index.md",sourceDirName:"collecting-data/collecting-from-own-applications/javascript-trackers/node-js-tracker/node-js-tracker-v3/tracking-events",slug:"/collecting-data/collecting-from-own-applications/javascript-trackers/node-js-tracker/node-js-tracker-v3/tracking-events/",permalink:"/docs/collecting-data/collecting-from-own-applications/javascript-trackers/node-js-tracker/node-js-tracker-v3/tracking-events/",draft:!1,editUrl:"https://github.com/snowplow/snowplow.github.io/tree/main/docs/collecting-data/collecting-from-own-applications/javascript-trackers/node-js-tracker/node-js-tracker-v3/tracking-events/index.md",tags:[],version:"current",lastUpdatedAt:1662725915,formattedLastUpdatedAt:"Sep 9, 2022",sidebarPosition:4e3,frontMatter:{title:"Tracking Events",date:"2021-04-07",sidebar_position:4e3},sidebar:"defaultSidebar",previous:{title:"Configuration",permalink:"/docs/collecting-data/collecting-from-own-applications/javascript-trackers/node-js-tracker/node-js-tracker-v3/configuration/"},next:{title:"Previous versions",permalink:"/docs/collecting-data/collecting-from-own-applications/javascript-trackers/node-js-tracker/node-js-tracker/"}},p={},c=[{value:"Tracking specific events",id:"tracking-specific-events",level:2},{value:"Track events with the track() function",id:"track-events-with-the-track-function",level:3},{value:"Optional arguments",id:"optional-arguments",level:4},{value:"Custom contexts",id:"custom-contexts",level:4},{value:"Timestamps",id:"timestamps",level:4},{value:"Track screen views with\xa0<code>buildScreenView()</code>",id:"track-screen-views-withbuildscreenview",level:3},{value:"Track pageviews with\xa0<code>buildPageView()</code>",id:"track-pageviews-withbuildpageview",level:3},{value:"Track self describing events with\xa0<code>buildSelfDescribingEvent()</code>",id:"track-self-describing-events-withbuildselfdescribingevent",level:3},{value:"Track structured events with <code>buildStructEvent()</code>",id:"track-structured-events-with-buildstructevent",level:3}],s={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"tracking-specific-events"},"Tracking specific events"),(0,r.kt)("p",null,"Snowplow has been built to enable you to track a wide range of events that occur when users interact with your websites and apps."),(0,r.kt)("p",null,"Tracking methods supported by the Node.js Tracker at a glance:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Function")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#track-event"},(0,r.kt)("inlineCode",{parentName:"a"},"track()"))),(0,r.kt)("td",{parentName:"tr",align:null},"Tracks an event generated from a build functions")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#screen-view"},(0,r.kt)("inlineCode",{parentName:"a"},"buildScreenView()"))),(0,r.kt)("td",{parentName:"tr",align:null},"Track the user viewing a screen within the application")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#page-view"},(0,r.kt)("inlineCode",{parentName:"a"},"buildPageView()"))),(0,r.kt)("td",{parentName:"tr",align:null},"Track and record views of web pages.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#self-describing-event"},(0,r.kt)("inlineCode",{parentName:"a"},"buildSelfDescribingEvent()"))),(0,r.kt)("td",{parentName:"tr",align:null},"Track a Snowplow custom self describing event")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#struct-event"},(0,r.kt)("inlineCode",{parentName:"a"},"buildStructEvent()"))),(0,r.kt)("td",{parentName:"tr",align:null},"Track a Snowplow custom structured event")))),(0,r.kt)("h3",{id:"track-events-with-the-track-function"},"Track events with the track() function"),(0,r.kt)("p",null,"All events are tracked through the ",(0,r.kt)("inlineCode",{parentName:"p"},"track()")," function on the tracker instance. The type of event is determined by one of the event builder functions, which all begin as ",(0,r.kt)("inlineCode",{parentName:"p"},"build*()"),"."),(0,r.kt)("h4",{id:"optional-arguments"},"Optional arguments"),(0,r.kt)("p",null,"Each build method which is passed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"track()")," function has both default and optional arguments. If you don't want to provide a value for an optional argument, just ignore it in the object or pass\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"null"),"\xa0and it will be ignored. For example, if you want to track a page view event with a referrer but without a title:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"t.track(buildPageView({ \n  pageUrl: 'http://www.example.com', \n  referrer: 'http://www.referer.com'\n});\n")),(0,r.kt)("h4",{id:"custom-contexts"},"Custom contexts"),(0,r.kt)("p",null,"In short, custom contexts let you add additional information about the circumstances surrounding an event. Each call to ",(0,r.kt)("inlineCode",{parentName:"p"},"track()")," accepts an additional optional context parameter:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"t.track(buildPageView({ \n  pageUrl: 'http://www.example.com', \n  referrer: 'http://www.referer.com'\n}),\n[ // Array of custom contexts ]);\n")),(0,r.kt)("p",null,"The\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"context"),"\xa0argument should consist of an array of zero or more context objects. Each object should be a self-describing JSON following the same pattern as an\xa0self describing event."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Important:"),"\xa0Even if only one custom context is being attached to an event, it still needs to be wrapped in an array."),(0,r.kt)("p",null,"If a visitor arrives on a page advertising a movie, the context dictionary might look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "schema": "iglu:com.acme_company/movie_poster/jsonschema/2-1-1",\n  "data": {\n    "movie_name": "Solaris",\n    "poster_country": "JP"\n  }\n}\n')),(0,r.kt)("p",null,"This is how to fire a page view event with the above custom context:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'t.track(buildPageView({ \n  pageUrl: \'http://www.example.com\', \n  referrer: \'http://www.referer.com\'\n}), \n[{\n  "schema": "iglu:com.acme_company/movie_poster/jsonschema/2-1-1",\n  "data": {\n    "movie_name": "Solaris",\n    "poster_country": "JP"\n  }\n}]);\n')),(0,r.kt)("p",null,"Note that even though there is only one custom context attached to the event, it still needs to be placed in an array."),(0,r.kt)("h4",{id:"timestamps"},"Timestamps"),(0,r.kt)("p",null,"Each\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"track()"),"\xa0call supports an optional timestamp as its final argument, after the context argument; this allows you to manually override the timestamp attached to this event."),(0,r.kt)("p",null,"If you do not pass this timestamp in as an argument, then the Tracker will use the current time to be the timestamp for the event."),(0,r.kt)("p",null,"Here is an example tracking a structured event and supplying the optional timestamp argument:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'t.track(buildStructEvent({\n  category: "game action", \n  action: "save"\n}), [], 1368725287000);\n')),(0,r.kt)("p",null,"Timestamp is counted in milliseconds since the Unix epoch - the same format as generated by\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"new Date().getTime()"),"."),(0,r.kt)("h3",{id:"track-screen-views-withbuildscreenview"},"Track screen views with\xa0",(0,r.kt)("inlineCode",{parentName:"h3"},"buildScreenView()")),(0,r.kt)("p",null,"Use\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"buildScreenView()"),"\xa0to build a user viewing a screen (or equivalent) within your app. Arguments are:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Argument")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Required?")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Type")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},"Human-readable name for this screen"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Non-empty string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"id")),(0,r.kt)("td",{parentName:"tr",align:null},"Unique identifier for this screen"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"String")))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"name"),"\xa0and\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"id"),"\xa0are not individually required, but you must provide at least one of them."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'t.track(buildScreenView({\n  name: "HUD > Save Game", \n  id: "screen23"\n}));\n')),(0,r.kt)("h3",{id:"track-pageviews-withbuildpageview"},"Track pageviews with\xa0",(0,r.kt)("inlineCode",{parentName:"h3"},"buildPageView()")),(0,r.kt)("p",null,"Use\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"buildPageView()"),"\xa0to track a user viewing a page within your app. Arguments are:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Argument")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Required?")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Type")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pageUrl")),(0,r.kt)("td",{parentName:"tr",align:null},"The URL of the page"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Non-empty string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pageTitle")),(0,r.kt)("td",{parentName:"tr",align:null},"The title of the page"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"String")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"referrer")),(0,r.kt)("td",{parentName:"tr",align:null},"The address which linked to the page"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"String")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'t.track(buildPageView({\n  pageUrl: "www.example.com", \n  url: "example",\n  referrer: "www.referrer.com"\n}));\n')),(0,r.kt)("h3",{id:"track-self-describing-events-withbuildselfdescribingevent"},"Track self describing events with\xa0",(0,r.kt)("inlineCode",{parentName:"h3"},"buildSelfDescribingEvent()")),(0,r.kt)("p",null,"Use\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"buildSelfDescribingEvent()"),"\xa0to track a custom event which consists of a name and an unstructured set of properties. This is useful when you want to track event types which are proprietary/specific to your business (i.e. not already part of Snowplow)."),(0,r.kt)("p",null,"The arguments are as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Argument")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Required?")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Type")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"event")),(0,r.kt)("td",{parentName:"tr",align:null},"The self describing event definition"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"JSON")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'t.track(buildSelfDescribingEvent({\n  event: {\n    schema: "iglu:com.example_company/save-game/jsonschema/1-0-2",\n    data: {\n      save_id: "4321",\n      level: 23,\n      difficultyLevel: "HARD",\n      dl_content: true\n    }\n  }\n}));\n')),(0,r.kt)("p",null,"The\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"event"),"\xa0property must be an object with two fields:\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"schema"),"\xa0and\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"data"),".\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"data"),"\xa0is an object containing the properties of the self describing event.\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"schema"),"\xa0identifies the JSON schema against which\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"data"),"\xa0should be validated."),(0,r.kt)("h3",{id:"track-structured-events-with-buildstructevent"},"Track structured events with ",(0,r.kt)("inlineCode",{parentName:"h3"},"buildStructEvent()")),(0,r.kt)("p",null,"Use\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"buildStructEvent()"),"\xa0to track a custom event happening in your app which fits the Google Analytics-style structure of having up to five fields (with only the first two required):"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Argument")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Required?")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Type")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"category")),(0,r.kt)("td",{parentName:"tr",align:null},"The grouping of structured events which this\xa0",(0,r.kt)("inlineCode",{parentName:"td"},"action"),"\xa0belongs to"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Non-empty string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"action")),(0,r.kt)("td",{parentName:"tr",align:null},"Defines the type of user interaction which this event involves"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Non-empty string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"label")),(0,r.kt)("td",{parentName:"tr",align:null},"A string to provide additional dimensions to the event data"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"String")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"property")),(0,r.kt)("td",{parentName:"tr",align:null},"A string describing the object or the action performed on it"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"String")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:null},"A value to provide numerical data about the event"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Number")))),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'t.track(buildStructEvent({\n  category: "shop", \n  action: "add-to-basket", \n  label: "product", \n  property: "pcs", \n  value: 2\n}));\n')))}d.isMDXComponent=!0}}]);