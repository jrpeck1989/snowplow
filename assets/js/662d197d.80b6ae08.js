"use strict";(self.webpackChunkdocsite_poc_github_io=self.webpackChunkdocsite_poc_github_io||[]).push([[99566],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,k=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(k,l(l({ref:t},p),{},{components:n})):a.createElement(k,l({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),r=n(86010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(87462),r=n(67294),o=n(86010),l=n(72389),i=n(67392),c=n(7094),s=n(12466);const p="tabList__CuJ",u="tabItem_LNqP";function d(e){var t,n;const{lazy:l,block:d,defaultValue:m,values:k,groupId:g,className:f}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),w=null!=k?k:h.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),b=(0,i.l)(w,((e,t)=>e.value===t.value));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===m?m:null!=(t=null!=m?m:null==(n=h.find((e=>e.props.default)))?void 0:n.props.value)?t:h[0].props.value;if(null!==y&&!w.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+w.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:v,setTabGroupChoices:N}=(0,c.U)(),[T,C]=(0,r.useState)(y),S=[],{blockElementScrollPositionUntilNextRender:O}=(0,s.o5)();if(null!=g){const e=v[g];null!=e&&e!==T&&w.some((t=>t.value===e))&&C(e)}const x=e=>{const t=e.currentTarget,n=S.indexOf(t),a=w[n].value;a!==T&&(O(t),C(a),null!=g&&N(g,String(a)))},E=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=S.indexOf(e.currentTarget)+1;n=null!=(a=S[t])?a:S[0];break}case"ArrowLeft":{var r;const t=S.indexOf(e.currentTarget)-1;n=null!=(r=S[t])?r:S[S.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},f)},w.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>S.push(e),onKeyDown:E,onFocus:x,onClick:x},l,{className:(0,o.Z)("tabs__item",u,null==l?void 0:l.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),l?(0,r.cloneElement)(h.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function m(e){const t=(0,l.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},69032:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var a=n(87462),r=(n(67294),n(3905)),o=n(65488),l=n(85162);const i={title:"Installation and set-up",date:"2022-08-30",sidebar_position:0},c=void 0,s={unversionedId:"collecting-data/collecting-from-own-applications/mobile-trackers/installation-and-set-up/index",id:"collecting-data/collecting-from-own-applications/mobile-trackers/installation-and-set-up/index",title:"Installation and set-up",description:"The Snowplow iOS Tracker SDK supports iOS 9.0+, macOS 10.9+, tvOS 9.0+ and watchOS 2.0+",source:"@site/docs/collecting-data/collecting-from-own-applications/mobile-trackers/installation-and-set-up/index.md",sourceDirName:"collecting-data/collecting-from-own-applications/mobile-trackers/installation-and-set-up",slug:"/collecting-data/collecting-from-own-applications/mobile-trackers/installation-and-set-up/",permalink:"/docs/collecting-data/collecting-from-own-applications/mobile-trackers/installation-and-set-up/",draft:!1,editUrl:"https://github.com/snowplow/snowplow.github.io/tree/main/docs/collecting-data/collecting-from-own-applications/mobile-trackers/installation-and-set-up/index.md",tags:[],version:"current",lastUpdatedAt:1662725915,formattedLastUpdatedAt:"Sep 9, 2022",sidebarPosition:0,frontMatter:{title:"Installation and set-up",date:"2022-08-30",sidebar_position:0},sidebar:"defaultSidebar",previous:{title:"Mobile Native Trackers",permalink:"/docs/collecting-data/collecting-from-own-applications/mobile-trackers/"},next:{title:"Tracking events",permalink:"/docs/collecting-data/collecting-from-own-applications/mobile-trackers/tracking-events/"}},p={},u=[{value:"Installing",id:"installing",level:2},{value:"Setting up",id:"setting-up",level:2},{value:"Installing",id:"installing-1",level:2},{value:"Setting up",id:"setting-up-1",level:2}],d={toc:u};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"ios",label:"iOS",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"The Snowplow iOS Tracker SDK supports iOS 9.0+, macOS 10.9+, tvOS 9.0+ and watchOS 2.0+"),(0,r.kt)("h2",{id:"installing"},"Installing"),(0,r.kt)("p",null,"The iOS Tracker SDK can be installed using various dependency managers."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Swift Package Manager")," (Recommended)"),(0,r.kt)("p",null,"To install Snowplow Tracker with SPM:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"In Xcode, select File > Swift Packages > Add Package Dependency."),(0,r.kt)("li",{parentName:"ol"},"Add the url where to download the library: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/snowplow/snowplow-objc-tracker"},"https://github.com/snowplow/snowplow-objc-tracker"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Cocoapods")),(0,r.kt)("p",null,"To install Snowplow Tracker with Cocoapods:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make sure that Cocoapods is installed on your system and correctly configured for your app.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the iOS Tracker SDK among the dependencies of your ",(0,r.kt)("inlineCode",{parentName:"p"},"Podfile"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"pod 'SnowplowTracker', '~> 4.0'\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run the command ",(0,r.kt)("inlineCode",{parentName:"p"},"pod install")," to add the tracker to your app project."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Carthage")),(0,r.kt)("p",null,"To install Snowplow Tracker with Carthage:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make sure that Carthage is installed on your system and correctly configured for your app.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the iOS Tracker SDK among the dependencies of your ",(0,r.kt)("inlineCode",{parentName:"p"},"Cartfile"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},'github "snowplow/snowplow-objc-tracker" ~> 4.0\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run the command ",(0,r.kt)("inlineCode",{parentName:"p"},"carthage update")," and drag the appropriate frameworks from the ",(0,r.kt)("inlineCode",{parentName:"p"},"Carthage/build")," folder to your app project."))),(0,r.kt)("h2",{id:"setting-up"},"Setting up"),(0,r.kt)("p",null,"Once the tracker SDK is correctly set as a dependency in your app project you have to instrument the tracker:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In your application delegate ",(0,r.kt)("inlineCode",{parentName:"p"},"AppDelegate.swift")," add ",(0,r.kt)("inlineCode",{parentName:"p"},"import SnowplowTracker"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"application(_:didFinishLaunchingWithOptions:)")," method, set up the SDK as follows:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'let tracker = Snowplow.createTracker(namespace: "appTracker", endpoint: COLLECTOR_URL, method: .post)\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"It creates a tracker instance which can be used to track events like this:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'let event = Structured(category: "Category_example", action: "Action_example")\ntracker.track(event)\n')),(0,r.kt)("p",{parentName:"li"},"If you prefer to access the tracker when the reference is not directly accessible, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultTracker")," :"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"Snowplow.defaultTracker().track(event)\n")))),(0,r.kt)("p",null,"The tracker has a default configuration where some settings are enabled by default:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"session tracking"),(0,r.kt)("li",{parentName:"ul"},"screen tracking"),(0,r.kt)("li",{parentName:"ul"},"platform contexts (mobile specific context fields)")),(0,r.kt)("p",null,"You can override the default configuration with a fine grained configuration when you create the tracker:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'let networkConfig = NetworkConfiguration(endpoint: COLLECTOR_URL, method: .post)\nlet trackerConfig = TrackerConfiguration()\n    .base64Encoding(false)\n    .sessionContext(true)\n    .platformContext(true)\n    .lifecycleAutotracking(true)\n    .screenViewAutotracking(true)\n    .screenContext(true)\n    .applicationContext(true)\n    .exceptionAutotracking(true)\n    .installAutotracking(true)\n    .userAnonymisation(false)\nlet sessionConfig = SessionConfiguration(\n    foregroundTimeout: Measurement(value: 30, unit: .minutes),\n    backgroundTimeout: Measurement(value: 30, unit: .minutes)\n)       \nSnowplow.createTracker(\n    namespace: "appTracker",\n    network: networkConfig,\n    configurations: [trackerConfig, sessionConfig]\n)\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"createTracker")," method allows the creation of multiple trackers in the same app. The ",(0,r.kt)("inlineCode",{parentName:"p"},"namespace")," field lets you distinguish events sent by a specific tracker instance. It is mandatory even in case the app uses just a single tracker instance like in the example above."),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/snowplow/snowplow-objc-tracker-examples"},"Examples Github repository")," includes demo apps for Swift and Objective-C covering the most popular dependencies managers. They are provided as simple reference apps to help you set up the tracker.")),(0,r.kt)(l.Z,{value:"android",label:"Android",mdxType:"TabItem"},(0,r.kt)("p",null,"The Android Tracker SDK supports Android 5 (",(0,r.kt)("strong",{parentName:"p"},"API level 21+"),")"),(0,r.kt)("h2",{id:"installing-1"},"Installing"),(0,r.kt)("p",null,"The Android Tracker SDK can be installed using Gradle."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Gradle")),(0,r.kt)("p",null,"Add into your ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"dependencies {\n  ...\n  // Snowplow Android Tracker\n  implementation 'com.snowplowanalytics:snowplow-android-tracker:4.+'\n  // In case 'lifecycleAutotracking' is enabled\n  implementation 'androidx.lifecycle-extensions:2.2.+'\n  ...\n}\n")),(0,r.kt)("h2",{id:"setting-up-1"},"Setting up"),(0,r.kt)("p",null,"Once the tracker SDK is correctly set as a dependency in your app project you have to instrument the tracker:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In your ",(0,r.kt)("inlineCode",{parentName:"p"},"Application")," subclass, set up the SDK as follows:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'TrackerController tracker = Snowplow.createTracker(context, "appTracker", COLLECTOR_URL, HttpMethod.POST);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"It creates a tracker instance which can be used to track events like this:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Event event = new Structured("Category_example", "Action_example");\ntracker.track(event);\n')),(0,r.kt)("p",{parentName:"li"},"If you prefer to access the tracker when the reference is not directly accessible, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultTracker")," :"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Snowplow.getDefaultTracker().track(event);\n")))),(0,r.kt)("p",null,"The tracker has a default configuration where some settings are enabled by default:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"session tracking"),(0,r.kt)("li",{parentName:"ul"},"screen tracking"),(0,r.kt)("li",{parentName:"ul"},"platform contexts (mobile specific context fields)")),(0,r.kt)("p",null,"You can override the default configuration with a fine grained configuration when you create the tracker:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'NetworkConfiguration networkConfig = new NetworkConfiguration(COLLECTOR_URL, HttpMethod.POST);\nTrackerConfiguration trackerConfig = new TrackerConfiguration("appId")\n    .base64Encoding(false)\n    .sessionContext(true)\n    .platformContext(true)\n    .lifecycleAutotracking(true)\n    .screenViewAutotracking(true)\n    .screenContext(true)\n    .applicationContext(true)\n    .exceptionAutotracking(true)\n    .installAutotracking(true)\n    .userAnonymisation(false);\nSessionConfiguration sessionConfig = new SessionConfiguration(\n    new TimeMeasure(30, TimeUnit.SECONDS),\n    new TimeMeasure(30, TimeUnit.SECONDS)\n);\nSnowplow.createTracker(context,\n    "appTracker",\n    networkConfig,\n    trackerConfig,\n    sessionConfig\n);\n')))))}m.isMDXComponent=!0}}]);