"use strict";(self.webpackChunkdocsite_poc_github_io=self.webpackChunkdocsite_poc_github_io||[]).push([[53687],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>w});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),w=a,g=u["".concat(l,".").concat(w)]||u[w]||d[w]||r;return n?o.createElement(g,s(s({ref:t},p),{},{components:n})):o.createElement(g,s({ref:t},p))}));function w(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<r;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},63997:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var o=n(87462),a=(n(67294),n(3905));const r={title:"Installing the Elasticsearch Loader",date:"2020-02-26",sidebar_position:10},s=void 0,i={unversionedId:"getting-started-on-snowplow-open-source/setup-snowplow-on-aws/setup-destinations/elastic/installing-the-elasticsearch-loader/index",id:"getting-started-on-snowplow-open-source/setup-snowplow-on-aws/setup-destinations/elastic/installing-the-elasticsearch-loader/index",title:"Installing the Elasticsearch Loader",description:"Getting started",source:"@site/docs/getting-started-on-snowplow-open-source/setup-snowplow-on-aws/setup-destinations/elastic/installing-the-elasticsearch-loader/index.md",sourceDirName:"getting-started-on-snowplow-open-source/setup-snowplow-on-aws/setup-destinations/elastic/installing-the-elasticsearch-loader",slug:"/getting-started-on-snowplow-open-source/setup-snowplow-on-aws/setup-destinations/elastic/installing-the-elasticsearch-loader/",permalink:"/docs/getting-started-on-snowplow-open-source/setup-snowplow-on-aws/setup-destinations/elastic/installing-the-elasticsearch-loader/",draft:!1,editUrl:"https://github.com/snowplow/snowplow.github.io/tree/main/docs/getting-started-on-snowplow-open-source/setup-snowplow-on-aws/setup-destinations/elastic/installing-the-elasticsearch-loader/index.md",tags:[],version:"current",lastUpdatedAt:1662725915,formattedLastUpdatedAt:"Sep 9, 2022",sidebarPosition:10,frontMatter:{title:"Installing the Elasticsearch Loader",date:"2020-02-26",sidebar_position:10},sidebar:"defaultSidebar",previous:{title:"Configuring Elasticsearch",permalink:"/docs/getting-started-on-snowplow-open-source/setup-snowplow-on-aws/setup-destinations/elastic/configuring-elasticsearch/"},next:{title:"Using the Elasticsearch Loader",permalink:"/docs/getting-started-on-snowplow-open-source/setup-snowplow-on-aws/setup-destinations/elastic/using-the-elasticsearch-loader/"}},l={},c=[{value:"Getting started",id:"getting-started",level:3},{value:"Downloading the jarfile",id:"downloading-the-jarfile",level:3},{value:"Compiling from source",id:"compiling-from-source",level:3}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"getting-started"},"Getting started"),(0,a.kt)("p",null,"You can choose to either:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Download the Elasticsearch Loader jarfile, ",(0,a.kt)("em",{parentName:"li"},"or:")),(0,a.kt)("li",{parentName:"ol"},"Compile it from source")),(0,a.kt)("h3",{id:"downloading-the-jarfile"},"Downloading the jarfile"),(0,a.kt)("p",null,"To get a local copy, you can download the executable jarfile ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/snowplow/snowplow-elasticsearch-loader/releases"},"directly from GitHub"),"."),(0,a.kt)("h3",{id:"compiling-from-source"},"Compiling from source"),(0,a.kt)("p",null,"Alternatively, you can build it from the source files. To do so, you will need ",(0,a.kt)("a",{parentName:"p",href:"https://www.scala-lang.org"},"scala")," and ",(0,a.kt)("a",{parentName:"p",href:"http://www.scala-sbt.org"},"sbt")," installed."),(0,a.kt)("p",null,"To do so, clone the Elasticsearch loader repo:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/snowplow/snowplow-elasticsearch-loader.git\n")),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"sbt")," to resolve dependencies, compile the source, and build a fat JAR file with all dependencies."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'sbt "project http" assembly # if you want to use the HTTP API compatible with every ES versions.\nsbt "project tcp" assembly # if you want to use the transport API with a 5.x cluster\nsbt "project tcp2x" assembly # if you want to use the transport API with a 2.x cluster\n')),(0,a.kt)("p",null,"You will then find the fat jar in the corresponding directory: ",(0,a.kt)("inlineCode",{parentName:"p"},"{http,tcp,tcp2x}/target/scala-2.11/snowplow-elasticsearch-loader-{http,tcp,tcp-2x}-0.10.0.jar"),". It is now ready to be deployed."))}d.isMDXComponent=!0}}]);